% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/emulate.R
\docType{methods}
\name{emulate}
\alias{emulate}
\alias{emulate,ANY,ANY-method}
\alias{emulate,character,vector-method}
\alias{emulate,factor,vector-method}
\alias{emulate,randomForest,data.frame-method}
\alias{emulate,randomForest,data.table-method}
\alias{emulate,vector,character-method}
\alias{emulate,vector,factor-method}
\title{Make one object emulate another}
\usage{
emulate(x, template, ...)

\S4method{emulate}{randomForest,data.frame}(x, template,
  default = "__OTHER__")

\S4method{emulate}{factor,vector}(x, template, default = NA)

\S4method{emulate}{character,vector}(x, template, default = NA)

\S4method{emulate}{ANY,ANY}(x, template, ...)
}
\arguments{
\item{x}{object to change}

\item{template}{object to emulate}

\item{...}{additional parameters 

\code{emulate} makes \code{x} more like \code{template} so that \code{x} can be 
used in place of \code{template} with changing the data as little as possible.  This
generally means coercing to the type of \code{x} and only containing the 
values that are in \code{x}.

For the \code{randomForest} method, this requires adding a \code{default}}

\item{default}{character value for missing values}
}
\value{
Returns \code{template} that emulates \code{x}
  
  The ANY-ANY method simply returns \code{template}
}
\description{
Make one object more like another
}
\examples{
  iris2 <- droplevels( iris[1:100, ])
  f <- randomForest( Sepal.Length ~ . , iris2 )
  
  emulate( f, iris )
template <- factor( letters[1:3] )
x <- factor( letters[1:6] )

emulate( template, x ) # a    b    c    <NA> <NA> <NA>
emulate( x, template ) # adds levels of x
emulate( template, x, default="b" )
template <- letters[1:6] 
x <- letters[1:3] 

emulate( template, x )
emulate( x, template ) 
emulate( template, x, default="b" )
}
\seealso{
\code{\link{apply.pattern}} 
  \code{\link[dp.misc]{conform}}
  \code{\link[plyr]{rbind.fill}}
}

